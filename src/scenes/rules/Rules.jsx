import React, { useState } from "react";
import {
  Box,
  Typography,
  List,
  ListItem,
  ListItemText,
  Grid,
  Card,
  CardContent,
  Button,
} from "@mui/material";
import { Header } from "../../components";
import { useTheme } from "@mui/material/styles";
import { tokens } from "../../theme";

const websiteRules = [
  {
    rule: "Guidelines",
    permissions: [
      "Slots must be generated at Sunday each week",
      "Slot duration can be generated by followed store manager's decision",
      "Every actions in this website must be followed by role",
      "The booking status must be promptly updated to reflect the customer's usage status.",
    ],
  },
  {
    rule: "Admin",
    permissions: [
      "Manage managers of stores",
      "Manage staffs ",
      "Create and manage stores",
      "View reports",
    ],
  },
  {
    rule: "Manager",
    permissions: [
      "Manage staffs",
      "Create and manage POD in store",
      "Create and manage store prices",
      "Create and manage products",
      "Manage payments",
      "View reports",
    ],
  },
  {
    rule: "Staff",
    permissions: [
      "Generate slots based on store prices",
      "View and manage bookings of customers",
      "View and manage payments of customers and refund",
      "View and manage products",
      "View reports",
    ],
  },
];

const Rules = () => {
  const theme = useTheme();
  const colors = tokens(theme.palette.mode);

  const [currentRuleIndex, setCurrentRuleIndex] = useState(0);

  const handleNext = () => {
    setCurrentRuleIndex((prevIndex) => (prevIndex + 1) % websiteRules.length);
  };

  const handlePrevious = () => {
    setCurrentRuleIndex(
      (prevIndex) => (prevIndex - 1 + websiteRules.length) % websiteRules.length
    );
  };

  const currentRule = websiteRules[currentRuleIndex];

  return (
    <Box m="20px">
      <Header
        title="Rules"
        subtitle="Rules in using this website"
        showBackButton={true}
      />
      <Box>
        <Box display="flex" alignItems="center" justifyContent="center">
          <Button
            onClick={handlePrevious}
            variant="contained"
            sx={{
              bgcolor: colors.primary[400],
              color: colors.gray[100],
              "&:hover": { bgcolor: colors.primary[500] },
              minWidth: "60px",
              minHeight: "60px",
              mr: 3,
              borderRadius: "50%",
              fontSize: "24px",
            }}
          >
            &lt;
          </Button>
          <Card
            sx={{
              bgcolor: colors.primary[400],
              color: colors.gray[100],
              borderRadius: 3,
              boxShadow: "0 8px 24px rgba(0,0,0,0.2)",
              transition: "transform 0.3s, box-shadow 0.3s",
              "&:hover": {
                transform: "scale(1.02)",
                boxShadow: "0 12px 32px rgba(0,0,0,0.3)",
              },
              minWidth: "600px",
              minHeight: "400px",
            }}
          >
            <CardContent sx={{ p: 4 }}>
              <Typography
                variant="h3"
                gutterBottom
                sx={{
                  fontWeight: "bold",
                  mb: 1,
                  textAlign: "center",
                  color: colors.greenAccent[500],
                }}
              >
                {currentRule.rule}
              </Typography>
              {currentRule.rule === "Guidelines" && (
                <Typography
                  sx={{
                    color: colors.greenAccent[500],
                    textAlign: "center",
                    mb: 3,
                    fontWeight: "bold",
                    fontSize: "18px",
                  }}
                >
                  Important: Please follow these guidelines strictly
                </Typography>
              )}
              <List>
                {currentRule.permissions.map((permission, index) => (
                  <ListItem
                    key={index}
                    sx={{
                      pl: 2,
                      py: 2,
                      mb: 2,
                      borderRadius: 2,
                      transition: "transform 0.2s, background-color 0.2s",
                      "&:hover": {
                        transform: "translateX(10px)",
                        bgcolor: colors.primary[500],
                      },
                    }}
                  >
                    <ListItemText
                      primary={`${index + 1}. ${permission}`}
                      sx={{
                        "& .MuiListItemText-primary": {
                          fontSize: "1.1rem",
                          fontWeight: 500,
                          color: colors.gray[100],
                        },
                      }}
                    />
                  </ListItem>
                ))}
              </List>
            </CardContent>
          </Card>
          <Button
            onClick={handleNext}
            variant="contained"
            sx={{
              bgcolor: colors.primary[400],
              color: colors.gray[100],
              "&:hover": { bgcolor: colors.primary[500] },
              minWidth: "60px",
              minHeight: "60px",
              ml: 3,
              borderRadius: "50%",
              fontSize: "24px",
            }}
          >
            &gt;
          </Button>
        </Box>
      </Box>
    </Box>
  );
};

export default Rules;
